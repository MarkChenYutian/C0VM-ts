import { LRParser } from '@lezer/lr';
import { LRLanguage, foldNodeProp, foldInside, indentNodeProp, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_Identifier = {__proto__:null,typedef:22, struct:28, requires:64, true:244, false:246, NULL:82, alloc:88, alloc_array:92, ensures:144, assert:180, if:184, else:188, for:192, loop_invariant:198, while:202, return:206};
const parser = LRParser.deserialize({
  version: 14,
  states: "!!`Q]QPOOOkQPO'#C`OOQO'#Ei'#EiQ]QPOOOOQO'#Ce'#CeOOQO'#Ci'#CiOpQQO'#ChO!RQPO'#ChO!WQPO'#CdO!`QQO'#CnOOQO'#Ej'#EjQ`QPOOO!hQSO,58zOOQO-E8g-E8gOOQO'#Ek'#EkO!mQQO,59SO!mQQO,59SO#OQPO'#ChO!WQPO,59OO!WQPO'#CqO#jQPO,59YO#oQPO,59^OOQO-E8h-E8hO#tQPO1G.fOOQO-E8i-E8iO#yQQO1G.nO$[QPO,59SO$[QPO,59SO$vQPO1G.jO${QPO'#ElO%QQPO,59]OOQO1G.t1G.tO%]QPO1G.xOOQO7+$Q7+$QO%hQPO1G.nOOQO7+$U7+$UO&SQPO,5;WOOQO-E8j-E8jOOQO1G.w1G.wO&XQPO'#CvO&^QPO'#CuO&fQPO7+$dOOQO1G0r1G0rOOQO,59b,59bO!WQPO'#EmO&kQPO,59aO&sQPO<<HOOOQO,5;X,5;XOOQO-E8k-E8kO'RQPO'#CyO'RQPO'#CyOOQO'#En'#EnO'ZQPOAN=jO(vQPO'#DwOOQOAN=jAN=jOOQOAN?`AN?`OOQO'#C{'#C{O(}QPO,59eOOQO'#Du'#DuO(}QPO,5:`O(}QPO,59eO(}QPO,5:`OOQO-E8l-E8lOOQOG23UG23UOOQOG24zG24zO+]QWO'#ChOOQO'#Eo'#EoO,`QPO'#C}OOQO'#DS'#DSOOQO'#DU'#DUOOQO'#DX'#DXOOQO'#DZ'#DZOOQO'#DP'#DPO-{QQO'#DxO.uQPO'#DPO.zQPO'#DPO/PQPO'#DPO/wQ`O'#DxO1ZQPO'#EWO1ZQPO'#EWOOQO'#EZ'#EZOOQO'#E_'#E_OOQO'#Ed'#EdOOQO'#Ef'#EfO1`QPO'#DxOOQO'#Dx'#DxO1hQPO'#DxO1mQPO'#DxO1rQPO'#DxO(}QPO'#DxOOQO'#Er'#ErO1wQPO,5:cOOQO,5:c,5:cO3`QQO1G/PO2OQQO1G/PO3gQQO'#C}O5bQQO1G/zO4QQQO1G/zO6yQQO1G/PO5iQQO1G/PO8bQQO1G/zO7QQQO1G/zO8iQPO'#EkOOQO'#Ep'#EpO8sQPO'#EpO8xQQO,59iOOQO-E8m-E8mO8xQQO,59iO;hQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO/PQPO,59kO(}QPO,59kO/PQPO,5:dO/PQPO,5:dO;oQPO,5:dO!WQPO,59kO!WQPO,59kO>pQ`O,59kOOQO,59k,59kO@PQ`O'#C}OOQO,5:d,5:dOOQO'#EX'#EXO(}QPO,5:rO(}QPO,5:rOAiQPO'#C}OAwQPO,5:dO(}QPO,5:dO'iQPO,5:dO(}QPO,5:dOCaQQO,5:dOBPQQO,5:dOOQO-E8p-E8pOOQO1G/}1G/}OOQO7+$k7+$kOChQQO,59kO(}QPO'#DOOOQO7+%f7+%fOCxQPO7+$kOC}QPO7+%fOEdQQO,59jODSQQO,59jOOQO,5;[,5;[OOQO-E8n-E8nOG[QQO1G/TOIrQQO'#DWOH_QQO'#DWOIyQPO1G/VOLqQ`O1G/VOOQO1G/V1G/VOLxQ`O1G/VO! oQ`O1G/VO! vQ`O1G/VO! yQ`O1G/VO!$sQ`O1G/VO!!QQ`O1G/VO!'mQ`O1G/VO!$zQ`O1G/VO!*gQ`O1G/VO!'tQ`O1G/VO!-aQ`O1G/VO!*nQ`O1G/VO!0ZQ`O1G/VO!-hQ`O1G/VO!3TQ`O1G/VO!0bQ`O1G/VO!5}Q`O1G/VO!3[Q`O1G/VO!8wQ`O1G/VO!6UQ`O1G/VO!;qQ`O1G/VO!9OQ`O1G/VO!>kQ`O1G/VO!;xQ`O1G/VO!AeQ`O1G/VO!>rQ`O1G/VO!D_Q`O1G/VO!AlQ`O1G/VO!GXQ`O1G/VO!DfQ`O1G/VO!JRQ`O1G/VO!G`Q`O1G/VO!L{Q`O1G/VO!JYQ`O1G/VO!NdQQO1G/VO!MSQQO1G/VO##WQ`O1G0OO!NkQ`O1G0OO#%zQ`O1G0OO##_Q`O1G0OOOQO1G0O1G0OO#&RQPO1G/VO#&WQ`O,59iO#&WQ`O,59iO#*dQQO1G0^O#)SQQO1G0^O#+{QQO1G0^O#*kQQO1G0^O#,SQPO,59iO#,SQPO,59iO/PQPO1G0OO#-rQQO1G0OO#,bQQO1G0OO(}QPO1G0OO#/ZQQO1G0OO#-yQQO1G0OO#1UQQO1G/VO#1]QQO1G/VO#3TQQO1G/VO#3[QQO1G/VO#3_QQO1G/VO#5YQQO1G/VO#3fQQO1G/VO#7TQQO1G/VO#5aQQO1G/VO#9OQQO1G/VO#7[QQO1G/VO#:yQQO1G/VO#9VQQO1G/VO#<tQQO1G/VO#;QQQO1G/VO#>oQQO1G/VO#<{QQO1G/VO#@jQQO1G/VO#>vQQO1G/VO#BeQQO1G/VO#@qQQO1G/VO#D`QQO1G/VO#BlQQO1G/VO#FZQQO1G/VO#DgQQO1G/VO#HUQQO1G/VO#FbQQO1G/VO#JPQQO1G/VO#H]QQO1G/VO#KzQQO1G/VO#JWQQO1G/VO#MuQQO1G/VO#LRQQO1G/VO$ pQQO1G/VO#M|QQO1G/VOOQO<<HV<<HVOOQO<<IQ<<IQOOQO1G/U1G/UO(}QPO'#EqO$ wQPO,59rOOQO7+$q7+$qO/PQPO7+$qOOQO7+%j7+%jO(}QPO7+$qO$!PQ`O1G/TOOQO7+%x7+%xO$#`QPO7+%xO$#eQPO1G/TO$&`Q`O7+%jO$#sQ`O7+%jO$&gQPO7+%jO$'|QQO7+%jO$&lQQO7+%jO$(TQPO7+%jO$)sQQO,5;]O$(`QQO,5;]OOQO-E8o-E8oO$,mQ`O<<H]O$)zQ`O<<H]O$,tQQO'#DPO$.UQQO<<H]OOQO<<Id<<IdOOQO<<IU<<IUO$.]QPO<<IUO$/sQPO<<IUO$0aQPO'#EaO$0aQPO'#EaOOQO'#Et'#EtO$(TQPO<<IUO$0fQQO<<H]O$1PQQO<<H]OOQOAN=wAN=wOOQO'#E]'#E]O$1jQPOAN>pO$1rQPOAN>pO$3YQQO'#DxO$3jQPOAN>pOOQO'#Eb'#EbO(}QPO,5:{O(}QPO,5:{OOQO-E8r-E8rOOQOAN>pAN>pO$3oQPO,5;_OOQOG24[G24[O$1jQPOG24[OOQO-E8q-E8qO$(TQPOG24[O$3tQQO1G0gO$3{QQO1G0gO$4SQQO1G0gO$4ZQQO1G0gO(}QPO1G0yOOQOLD)vLD)vP$1mQPO'#EsO$4bQQO1G0OO$4lQQO1G0OO$(TQPOLD)vOOQO7+&R7+&RO$4vQPO7+&RO$4{QQO7+&eO$5SQQO7+&eO$5ZQQO7+%jO$5eQQO7+%jOOQO!$'Mb!$'MbOOQO<<Im<<ImO$&gQPO<<JPOOQOAN?kAN?kO$5oQPO'#ChO$5tQPO,59SO$5tQPO,59SO$6SQPO1G.nO$6bQPO'#C}O$6jQPO'#C}O(}QPO'#DPO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,59kO(}QPO,5:dO(}QPO1G0OO(}QPO7+$qO$6rQQO'#DxO$7oQPO,5:dO$7wQQO1G/VO$8OQQO1G/VO$8VQPO'#ChO1`QPO'#DxO(}QPO,59k",
  stateData: "$8[~O#kOSPOSQOS~OTPOYUOZSO^TO~O#m[O~O_^O`^Oa^Od[Xg[X~OY`O~OYaO^TO~OdcOgeO~OUgO~O_^O`^Oa^Od[ag[a~O_^O`^Oa^OY[X^[XV[Xl[Xk[X~OVoO~OhpO~O#lqO~O_^O`^Oa^Od[ig[i~O_^O`^Oa^OY[a^[aV[al[ak[a~OVsO~OYtO~OYaO^TOcvO~OYaO^TOliP~O_^O`^Oa^OY[i^[iV[il[ik[i~OVzO~OY{O~Ok|OliX~Ol!OO~Ok|Olia~OV!XOd!VOn!RO!g!SO~Op!YO!j![O~OV!bOd!VOn!RO!g!SO~OY!cO^TOa!dOn!pOt!jOu!jOw!jOy!gO|!hO!O!iO!P!nO!Q!nO!g!qO#O!rO#S!sO#X!tO#Z!uO#n!fO#o!fO~Oc#OO~P'iOY#ROa!dOt!jOu!jOw!jOy!gO|!hO!O!iO!P([O!Q([O#n!fO#o!fO~O!f#[OhqX!RqX!SqX!TqX!UqX!VqX!WqX!XqX!YqX!ZqX![qX!]qX!^qX!_qX!`qX!aqX!bqX!cqX!dqX!xqX!yqX~O_#YO`^OY[Xa[X!mqX!nqX!oqX!pqX!qqX!rqX!sqX!tqX!uqX!vqX!wqX~P)uOY#_Oa!dO~Oa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mO!_#nO!`#oO!a#pO!b#qO!c#rO!d#sO!x#vO!y#vO~Oh#`O!m#tO!n#uO!o#uO!p#uO!q#uO!r#uO!s#uO!t#uO!u#uO!v#uO!w#uO~P,hOh#wO~Oh#xO~OY#{Oa!dOt!jOu!jOw!jOy!gO|!hO!O!iO!P!nO!Q!nO#n!fO#o!fO~OV#|OY!lX^!lXc!lXn!lXt!lXu!lXw!lXy!lX|!lX!O!lX!P!lX!Q!lX!g!lX#O!lX#S!lX#X!lX#Z!lX#n!lX#o!lX~P,hO!|#}O~OY$QOa!dO~Oh$SO~Oh$TO~Oh$UO~Oc$YO~P'iOV$ZOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~P2OO_$]OVqXaqX`qXkqXlqX!eqX~P)uOV$^Oa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~P4QOV$_Oa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~P5iOV$`Oa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~P7QO_#_X`#_X~P(}OY$cO~O_$]O!f#[Oaqahqa!Rqa!Sqa!Tqa!Uqa!Vqa!Wqa!Xqa!Yqa!Zqa![qa!]qa!^qa!_qa!`qa!aqa!bqa!cqa!dqa!mqa!nqa!oqa!pqa!qqa!rqa!sqa!tqa!uqa!vqa!wqa!xqa!yqaVqa`qakqalqa!eqa~OlzP~P(}OV%eOY!la^!laa!lac!lan!lat!lau!law!lay!la|!la!O!la!P!la!Q!la!g!la#O!la#S!la#X!la#Z!la#n!la#o!lal!la~Oh#`OVsaasa!Rsa!Ssa!Tsa!Usa!Vsa!Wsa!Xsa!Ysa!Zsa![sa!]sa!^sa!_sa!`sa!asa!bsa!csa!dsa!xsa!ysa~OYsa^sacsansatsausawsaysa|sa!Osa!Psa!Qsa!gsa#Osa#Ssa#Xsa#Zsa#nsa#osa~P=VO_$]OVqXYqX^qXaqXcqXnqXtqXuqXwqXyqX|qX!OqX!PqX!QqX!gqX#OqX#SqX#XqX#ZqX#nqX#oqX~P)uO_$]O!f#[OVqX!mqX~OV%eO!m%oO~OV%eOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~PBPO`saksalsa!esa~P=VO!g&jO~O!g&kO~O`&lOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~PDSO_$]O!f#[Oaqihqi!Rqi!Sqi!Tqi!Uqi!Vqi!Wqi!Xqi!Yqi!Zqi![qi!]qi!^qi!_qi!`qi!aqi!bqi!cqi!dqi!xqi!yqiVqi~O!mqi!nqi!oqi!pqi!qqi!rqi!sqi!tqi!uqi!vqi!wqi`qikqilqi!eqi~PEkOa(]Ok&mO!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xOlzX~Oh#`O~PH_Ol&oO~Oh#`OVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!Rsi!Ssi!Tsi!Usi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oasi~PJOOa#aO~PJOOa#aOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!Ssi!Tsi!Usi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~O!Rsi~PMPOh#`O!R#bO~PMPOa#aO!R#bO!S#cOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!Tsi!Usi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!!QOa#aO!R#bO!S#cO!T#dOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!Usi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!$zOa#aO!R#bO!S#cO!T#dO!U#eOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!'tOa#aO!R#bO!S#cO!T#dO!U#eO!V#fOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!*nOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!-hOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!0bOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!3[Oa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!6UOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!]si!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!9OOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!^si!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!;xOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!_si!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!>rOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mO!_#nOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!`si!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!AlOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mO!_#nO!`#oOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!asi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!DfOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mO!_#nO!`#oO!a#pOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!bsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!G`Oa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mO!_#nO!`#oO!a#pO!b#qOVsiYsi^sicsinsitsiusiwsiysi|si!Osi!Psi!Qsi!csi!dsi!gsi!xsi!ysi#Osi#Ssi#Xsi#Zsi#nsi#osi~Oh#`O~P!JYOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO!e&pO~Oh#`O~P!MSOV&qO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mO!_#nO!`#oO!a#pO!b#qO!c#rO!d#sOY!li^!lia!lic!lin!lit!liu!liw!liy!li|!li!O!li!P!li!Q!li!g!li#O!li#S!li#X!li#Z!li#n!li#o!li~Oh#`O~P!NkOV&qOa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mO!_#nO!`#oO!a#pO!b#qO!c#rO!d#sOY!li^!lic!lin!lit!liu!liw!liy!li|!li!O!li!P!li!Q!li!g!li#O!li#S!li#X!li#Z!li#n!li#o!li~Oh#`O~P##_Ok&rO~O_$]O!f#[OVqaYqa^qaaqacqahqanqatqauqawqayqa|qa!Oqa!Pqa!Qqa!Rqa!Sqa!Tqa!Uqa!Vqa!Wqa!Xqa!Yqa!Zqa![qa!]qa!^qa!_qa!`qa!aqa!bqa!cqa!dqa!gqa!xqa!yqa#Oqa#Sqa#Xqa#Zqa#nqa#oqa~OV&tOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~P#)SOV&uOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~P#*kO_$]O!f#[OVqa!mqa~Oa(]Ol&yO!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~P#,bOa(]Ol&|O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~P#-yOh#`OVsi!Rsi!Ssi!Tsi!Usi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oasi~P#/bOa(]O~P#/bOa(]OVsi!Ssi!Tsi!Usi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~O!Rsi~P#1dOh#`O!R(^O~P#1dOa(]O!R(^O!S(_OVsi!Tsi!Usi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#3fOa(]O!R(^O!S(_O!T(`OVsi!Usi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#5aOa(]O!R(^O!S(_O!T(`O!U(aOVsi!Vsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#7[Oa(]O!R(^O!S(_O!T(`O!U(aO!V(bOVsi!Wsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#9VOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cOVsi!Xsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#;QOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dOVsi!Ysi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#<{Oa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eOVsi!Zsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#>vOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fOVsi![si!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#@qOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gOVsi!]si!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#BlOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hOVsi!^si!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#DgOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iOVsi!_si!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#FbOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jOVsi!`si!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#H]Oa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kOVsi!asi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#JWOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lOVsi!bsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#LROa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mOVsi!csi!dsi`siksilsi!esi!xsi!ysi~Oh#`O~P#M|Ok&mOlza~OYqi^qicqinqitqiuqiwqiyqi|qi!Oqi!Pqi!Qqi!gqi#Oqi#Sqi#Xqi#Zqi#nqi#oqi~PEkO!g'UO~O_$]O!f#[OVqi!mqi~OV'VO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mO!_#nO!`#oO!a#pO!b#qO!c#rO!d#sOY!lq^!lqa!lqc!lqn!lqt!lqu!lqw!lqy!lq|!lq!O!lq!P!lq!Q!lq!g!lq#O!lq#S!lq#X!lq#Z!lq#n!lq#o!lq~Oh#`O~P$#sOd!VO~OV'XOa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Oh#`O~P$&lOd!VOn'YO!g'ZO~Oa(]O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xOk#eal#ea~Oh#`O~P$(`Oa#aO!R#bO!S#cO!T#dO!U#eO!V#fO!W#gO!X#hO!Y#iO!Z#jO![#kO!]#lO!^#mO!_#nO!`#oO!a#pO!b#qO!c#rO!d#sOVsyYsy^sycsynsytsyusywsyysy|sy!Osy!Psy!Qsy!gsy!xsy!ysy#Osy#Ssy#Xsy#Zsy#nsy#osy~Oh#`O~P$)zOa(]Oh#`O!R(^O!S(_O!T(`O!U(aO!V(bO!W(cO!X(dO!Y(eO!Z(fO![(gO!](hO!^(iO!_(jO!`(kO!a(lO!b(mO!c(nO!d(xO~Ol'`O~P2RO#Q'aOY!ly^!lya!lyc!lyn!lyt!lyu!lyw!lyy!ly|!ly!O!ly!P!ly!Q!ly!g!ly#O!ly#S!ly#X!ly#Z!ly#n!ly#o!lyl!ly~OY!cO^TOn!pO!g!qO#O!rO#S!sO#X!tO#Z!uO~P)QO#V'fO~OVsy`syksylsy!esy!xsy!ysy~P$,tOVsy`syksylsy!esy!xsy!ysy~P2ROd!VO#O!rO~O#Q'aOY!l!R^!l!Ra!l!Rc!l!Rn!l!Rt!l!Ru!l!Rw!l!Ry!l!R|!l!R!O!l!R!P!l!R!Q!l!R!g!l!R#O!l!R#S!l!R#X!l!R#Z!l!R#n!l!R#o!l!Rl!l!R~OV#|O!x#vO!y#vOl!lX~P2ROl'oO~Oh'tO~OV'zO~P$,tOV'zO~P2ROV'{O~P$,tOV'{O~P2ROV&qOl!li~P$,tOV&qOl!li~P2RO!g(RO~Ol(SO~P$,tOl(SO~P2ROV'VOl!lq~P$,tOV'VOl!lq~P2ROYkO~O_^O`^OY[aa[a~O_^O`^OY[ia[i~OY%gOa!dO~OY%mOa!dO~O!m(oO!n(oO!o(oO!p(oO!q(oO!r(oO!s(oO!t(oO!u(oO!v(oO!w(oO!x#vO!y#vO~P$,tOV%eO!m(pO~O!e(qO~P$,tO!e(qO~P2ROY(WO~O",
  goto: "9u#iPPPP#jPPP#n#sPP#x$kPPPP#nPP%Q#nPP%T%WPP%^P%bP%h*P*`PP.mP.mP0W0ZP1tPPPPPPPPPPPPPPPPPPPPPPPP%^3_P3e4RPPPPPPPPPPPPP4]4cP4iP4tP4zP5Q5WP5^P5dP#n5j5p5w6c6i6o6u8k9W9_9e9kTQORVYORZVWORZUXORZQbWQlbSmcnSwp|U!v!V!}$TQ$h#wQ%f#xR(w'XUVORZ`(UWbcnp|#w#xX(v!V!}$T'XRdXRypQxpR!P|T!T!O!UQ!Z!RR!^!SU!k!V!}$TQ#P!ZQ#S!]Q#U!^Q#W!_Q#y!nQ$R!vQ$V!{Q$[([S$a#Y$]Q$f#`Q$i#aQ$k#bQ$m#cQ$o#dQ$q#eQ$s#fQ$u#gQ$w#hQ$y#iQ${#jQ$}#kQ%P#lQ%R#mQ%T#nQ%V#oQ%X#pQ%Z#qQ%]#rQ%_#sQ%a#tQ%c#uQ%i$OQ%k$PQ%p$SQ%s$UQ%u(]Q%v(^Q%x(_Q%z(`Q%|(aQ&O(bQ&Q(cQ&S(dQ&U(eQ&W(fQ&Y(gQ&[(hQ&^(iQ&`(jQ&b(kQ&d(lQ&f(mQ&h(nQ&w%oQ&z%rQ&}&mQ'Q&pQ'S&rQ'^(qQ'p'gQ'r'hQ'w(oQ'|'tQ(O(pQ(r'XQ(s(wR(t(xk#Z!c#R#]#_#{$Q$e%g%h%m%n&s&vU!o!V!}$TQ#Q!ZQ#T!]Q#V!^Q#X!_S#z!n([Q$W!{S$b#Y$]Q$g#`S$j#a(]Q$l#bQ$n#cQ$p#dQ$r#eQ$t#fQ$v#gQ$x#hQ$z#iQ$|#jQ%O#kQ%Q#lQ%S#mQ%U#nQ%W#oQ%Y#pQ%[#qQ%^#rQ%`#sQ%b#tQ%d#uQ%j$OQ%l$PQ%q$SQ%t$UQ%w(^Q%y(_Q%{(`Q%}(aQ&P(bQ&R(cQ&T(dQ&V(eQ&X(fQ&Z(gQ&](hQ&_(iQ&a(jQ&c(kQ&e(lQ&g(mQ&i(nQ&x%oQ&{%rQ'O&mQ'R&pQ'T&rQ'_(qQ'd'XQ'q'gQ's'hQ'x(oQ'}'tQ(P(pR(u(x$P!j!V!Z!]!^!_!n!{!}#Y#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u$O$P$S$T$U$]%o%r&m&p&r'X'g'h't([(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(xR$h#`$P!l!V!Z!]!^!_!n!{!}#Y#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u$O$P$S$T$U$]%o%r&m&p&r'X'g'h't([(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(x$P!m!V!Z!]!^!_!n!{!}#Y#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u$O$P$S$T$U$]%o%r&m&p&r'X'g'h't([(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(xQ!]!RR!_!SQ!W!OQ!a!UQ'V&|Q'W&yQ'j']Q'l'bS'u'm'oQ(Q'yR(T(SS!|!V!}Q%r$TR'e'XX!w!V!}$T'XQ$O!pR$P!qW!x!V!}$T'XV'k'b'm'vQ'b'WR'm'cX!y!V!}$T'XX'[&|']'o'yQ'g'YR'h'ZX!z!V!}$T'XX!{!V!}$T'XQROR]RSZORRfZQ_U[h_ijr(V(XQi`QjaQrkQ(V!cR(X(WQncRunQ}xR!Q}Q!U!OR!`!U#O!e!V!Z!]!^!_!{!}#Y#`#s$O$P$S$T$U$]%r&m&r'X'g'h't([(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(xU#^!e(Y(Z!O(Y!n#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#t#u%o&pT(Z!v(wS#]!c#R[$d#]$e%h%n&s&vQ$e#_Q%h#{Q%n$QQ&s%gR&v%mS&n$f$gR'P&nQ!}!VR$X!}Q'c'WR'n'cQ']&|S'i']'yR'y'o",
  nodeNames: "⚠ Comment CommentBlock Program LibraryImport Import LibraryName ; TypeDefinition Keyword Identifier typedef Type Keyword struct [ ] Mul StructDefinition } { StructScope Function FunctionName ( CommaSep Parameter , ) Contract ContractLine Keyword requires Variable ArrayIndex Value String Number Boolean Char Keyword NULL CommaSep Keyword alloc Keyword alloc_array LogNot BitNot Div Mod Add Min Lsh Rsh Lt Le Gt Ge LogEq LogNeq BitAnd BitXor BitOr LogAnd LogOr CondQ CondS Field ContractBlock Contract Keyword ensures Scope Expression = AddEq MinEq MulEq DivEq ModEq AndEq XorEq NegEq LshEq RshEq Incr Decr Contract Keyword assert Keyword if Keyword else Keyword for Contract Keyword loop_invariant Keyword while Keyword return FuncDeclaration",
  maxTerm: 123,
  nodeProps: [
    ["closedBy", 15,"]",20,"}"],
    ["openedBy", 16,"[",19,"{"]
  ],
  skippedNodes: [0,1,2],
  repeatNodeCount: 12,
  tokenData: "/e~RtXY#cYZ#c]^#cpq#cqr#trs$Rst$duv${vw%Ywx%oxy&lyz&qz{&v{|'T|}'j}!O'o!P!Q(^!Q!R*h!R![+_![!]+g!]!^+l!^!_+q!_!`,b!`!a,o!a!b-`!b!c-e!c!}-q!}#O.W#P#Q.]#Q#R.b#R#S-q#T#o-q#o#p.o#p#q.t#q#r/R#r#s/W~#hS#k~XY#cYZ#c]^#cpq#c~#yP!P~!_!`#|~$RO!^~~$UROr$Rrs$_s~$R~$dOt~~$gP#i#j$j~$mP#g#h$p~$sP#X#Y$v~${OT~~%QP!S~!_!`%T~%YO!r~~%_Q!_~vw%e!_!`%j~%jO!b~~%oO!s~~%rRP#O%{#O#P&W#P~%{~&OPwx&R~&WOw~~&ZRPw%{wx&dx~%{~&iPw~wx&R~&qOh~~&vOl~~&{Pa~!_!`'O~'TO!p~~'YQ!T~{|'`!_!`'e~'eO!x~~'jO!n~~'oOk~~'tR!U~}!O'}!_!`(S!`!a(X~(SO!y~~(XO!o~~(^O!f~~(cR!R~z{(l!P!Q)u!_!`*c~(oRO!b(x!b!c)p!c~(x~({SOz(xz{)X{!P(x!Q~(x~)[TOz(xz{)X{!P(x!P!Q)k!Q~(x~)pOQ~~)uO!g~~)xRO!b*R!b!c*^!c~*R~*WQP~OY*RZ~*R~*cOn~~*hO!q~~*mQu~!z!{*s#l#m*s~*vR!Q![+P!c!i+P#T#Z+P~+URu~!Q![+P!c!i+P#T#Z+P~+dPu~!Q![+_~+lO!e~~+qOV~k+xQ#mP!Xj!^!_,O!_!`,]j,TP!Vj!_!`,WY,]O!vYj,bO!Yj~,gP!m~!_!`,j~,oO!]~k,vQ#lP!Zj!_!`,|!`!a-Rj-RO![jj-WP!Wj!_!`-ZY-`O!wY~-eO!d~~-hPz{-k~-nP!P!Q)po-zSgQYiUS!Q![-q!c!}-q#R#S-q#T#o-q~.]O_~~.bO`~~.gP!`~!_!`.j~.oO!t~~.tOd~~.yP!a~#p#q.|~/RO!c~~/WOc~k/]P!Qa!_!`/`Y/eO!uY",
  tokenizers: [0, 1, 2, 3, 4],
  topRules: {"Program":[0,3]},
  specialized: [{term: 10, get: value => spec_Identifier[value] || -1}],
  tokenPrec: 0
});

const C0Language = LRLanguage.define({
    parser: parser.configure({
        props: [
            foldNodeProp.add({
                Scope: foldInside,
                StructScope: foldInside,
                CommentBlock: foldInside,
            }),
            indentNodeProp.add({
                Scope: context => context.baseIndent + context.unit,
                StructScope: context => context.baseIndent + context.unit
            }),
            styleTags({
                "Type/...": tags.typeName,
                "StructScope/Identifier": tags.attributeName,
                "FunctionName/...": tags.name,
                "Parameter/Identifier": tags.variableName,
                Boolean: tags.bool,
                String: tags.string,
                Number: tags.number,
                Char: tags.character,
                Comment: tags.lineComment,
                CommentBlock: tags.blockComment,
                "return": tags.controlKeyword,
                "if": tags.controlKeyword,
                "else": tags.controlKeyword,
                "while": tags.controlKeyword,
                "for": tags.controlKeyword,
                "LibraryImport/...": tags.moduleKeyword,
                "alloc": tags.keyword,
                "alloc_array": tags.keyword,
                "assert": tags.keyword,
                "typedef": tags.keyword,
                "loop_invariant": tags.keyword,
                "requires": tags.keyword,
                "ensures": tags.keyword,
                "NULL": tags.null,
                ContractBlock: tags.annotation,
                ContractLine: tags.annotation,
                "(": tags.paren,
                ")": tags.paren,
                Add: tags.arithmeticOperator,
                Min: tags.arithmeticOperator,
                Mul: tags.arithmeticOperator,
                Div: tags.arithmeticOperator,
                Mod: tags.arithmeticOperator,
                AddEq: tags.arithmeticOperator,
                MinEq: tags.arithmeticOperator,
                MulEq: tags.arithmeticOperator,
                DivEq: tags.arithmeticOperator,
                ModEq: tags.arithmeticOperator,
                Incr: tags.arithmeticOperator,
                Decr: tags.arithmeticOperator,
                BitNot: tags.bitwiseOperator,
                BitXor: tags.bitwiseOperator,
                BitOr: tags.bitwiseOperator,
                BitAnd: tags.bitwiseOperator,
                Lsh: tags.bitwiseOperator,
                Rsh: tags.bitwiseOperator,
                LogNot: tags.logicOperator,
                LogAnd: tags.logicOperator,
                LogOr: tags.logicOperator,
                LogEq: tags.logicOperator,
                LogNeq: tags.logicOperator,
                Ge: tags.compareOperator,
                Le: tags.compareOperator,
                Gt: tags.compareOperator,
                Lt: tags.compareOperator,
                Field: tags.derefOperator,
            }),
        ]
    })
});
function C0() {
    return new LanguageSupport(C0Language);
}

export { C0, C0Language };
