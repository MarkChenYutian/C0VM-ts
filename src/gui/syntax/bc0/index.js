import { LRParser } from '@lezer/lr';
import { LRLanguage, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: "tOVQPOOQ[QQOOOOQO'#Cg'#CgOOQO'#Cc'#CcQ[QQOOOOQO-E6a-E6a",
  stateData: "j~OYOS~OQPO~ORQOSQOTQOUQO~O",
  goto: "g[PPPPPPP]PPPcQSPRTSTRPS",
  nodeNames: "âš  Program MagicNumber Byte FuncHeader JMPLabel LineComment",
  maxTerm: 11,
  skippedNodes: [0],
  repeatNodeCount: 1,
  tokenData: "'Q~RYXYqYZq]^qpqqst!S!Q![%P!c!e%P!e!f%b!f!i%P#T#Z%P~vSY~XYqYZq]^qpqq~!VQpq!]!^!_$R~!`SOY!lZ!^!l!^!_!w!_~!l~!qQU~OY!lZ~!l~!zR!Q![#T!c!i#T#T#Z#T~#WS!Q![#T![!]#d!c!i#T#T#Z#T~#gT}!O#v!Q![#v!c!}#v#R#S#v#T#o#v~#yP!`!a#|~$ROT~~$UT}!O$e!Q![$e!c!}$e#R#S$e#T#o$e~$hU}!O$e!Q![$e!`!a$z!c!}$e#R#S$e#T#o$e~%POS~Q%SR!Q![%]!c!i%]#T#Z%]Q%bORQR%eS!Q!R%q!R![%]!c!i%]#T#Z%]R%vPRQpq%yP%|P!e!f&PP&SP!Q!R&VP&YPpq&]P&`P!h!i&cP&fP!h!i&iP&lPpq&oP&rP!g!h&uP&xP!g!h&{P'QOQP",
  tokenizers: [0, 1],
  topRules: {"Program":[0,1]},
  tokenPrec: 0
});

const BC0Language = LRLanguage.define({
    parser: parser.configure({
        props: [
            styleTags({
                Byte: tags.atom,
                LineComment: tags.comment,
                FuncHeader: tags.className,
                JMPLabel: tags.moduleKeyword
            })
        ]
    }),
    languageData: {
        commentTokens: { line: "# " }
    }
});
function BC0() {
    return new LanguageSupport(BC0Language);
}

export { BC0, BC0Language };
